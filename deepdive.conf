deepdive {

  # Put your variables here
  schema.variables {

  }

  # Put your extractors here
  extraction.extractors {
     # Extractor 1: Clean output tables of all extractors
    ext_clear_table {
      style: "sql_extractor"
      sql: """
        DELETE FROM org_mentions;
        DELETE FROM has_relation;
        DELETE FROM has_relation_features;
        """
    }

    # Extractor 2: Extract mentions of people
    ext_org {

      # The style of the extractor
      style: "tsv_extractor"

      # An input to the extractor is a row (tuple) of the following query:
      input: """
          SELECT  sentence_id,
                  array_to_string(words, '~^~'),
                  array_to_string(ner_tags, '~^~')
          FROM    sentences
          """
      # With a tsv_extractor, developers have to make sure arrays
      # are parsable in the UDF. One easy way is to
      # use "array_to_string(array, delimiter)" function by psql.

      # output of extractor will be written to this table:
      output_relation: "org_mentions"

      # This user-defined function will be performed on each row (tuple) of input query:
      udf: ${FINBASE_HOME}"/udf/ext_org.py"

      dependencies: ["ext_clear_table"]

    }
  }
  # Put your inference rules here
  inference.factors {

  }

  # Specify a holdout fraction
  calibration.holdout_fraction: 0.25

}
